<UserControl x:Class="manageclientwpf.Dialogs"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DialogHost.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <TextBlock TextWrapping="Wrap" Margin="32">Dialogs are supported via the DialogHost control which was designed to work with MVVM/binding, code-behind, routed commands, and a pure code-based API.</TextBlock>

        <ScrollViewer HorizontalScrollBarVisibility="Auto" Grid.Row="1">
            <Grid VerticalAlignment="Top">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="320" />
                    <ColumnDefinition Width="320" />
                    <ColumnDefinition Width="320" />
                    <ColumnDefinition Width="320" />
                    <ColumnDefinition Width="320" />
                </Grid.ColumnDefinitions>

                <!--#region SAMPLE 1-->
                <TextBlock TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Top"
                           Margin="8 0 8 0">SAMPLE 1: Localized dialog encapsulating specific content, launched from a routed command, response handled in code-behind.</TextBlock>
                <StackPanel Grid.Column="0" Grid.Row="1" Margin="5 0 0 0">
                    <materialDesign:DialogHost DialogClosing="Sample1_DialogHost_OnDialogClosing" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <materialDesign:DialogHost.DialogContent>
                            <StackPanel Margin="16">
                                <TextBlock>Add a new fruit.</TextBlock>
                                <TextBox Margin="0 8 0 0" HorizontalAlignment="Stretch" x:Name="FruitTextBox" />
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" >
                                    <Button Style="{StaticResource MaterialDesignFlatButton}"
                                        IsDefault="True"
                                        Margin="0 8 8 0"
                                        Command="materialDesign:DialogHost.CloseDialogCommand">
                                        <Button.CommandParameter>
                                            <system:Boolean>True</system:Boolean>
                                        </Button.CommandParameter>
                                        ACCEPT
                                    </Button>
                                    <Button Style="{StaticResource MaterialDesignFlatButton}"
                                        IsCancel="True"
                                        Margin="0 8 8 0"
                                        Command="materialDesign:DialogHost.CloseDialogCommand">
                                        <Button.CommandParameter>
                                            <system:Boolean>False</system:Boolean>
                                        </Button.CommandParameter>
                                        CANCEL
                                    </Button>
                                </StackPanel>
                            </StackPanel>
                        </materialDesign:DialogHost.DialogContent>
                        <Border BorderThickness="1" BorderBrush="{DynamicResource PrimaryHueMidBrush}"
                            MinWidth="256" MinHeight="256" ClipToBounds="True">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <ListBox x:Name="FruitListBox">
                                    <ListBoxItem>Apple</ListBoxItem>
                                    <ListBoxItem>Banana</ListBoxItem>
                                    <ListBoxItem>Pear</ListBoxItem>
                                </ListBox>
                                <materialDesign:ColorZone Mode="PrimaryMid" Grid.Row="1" Effect="{DynamicResource MaterialDesignShadowDepth5}">
                                    <TextBlock Margin="16">Fruit Bowl</TextBlock>
                                </materialDesign:ColorZone>
                                <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                    Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
                                    VerticalAlignment="Bottom" HorizontalAlignment="Right" 
                                    Grid.Row="0" Margin="0 0 28 -20">
                                    <materialDesign:PackIcon Kind="Plus" Height="22" Width="22"/>
                                </Button>
                            </Grid>
                        </Border>
                    </materialDesign:DialogHost>
                </StackPanel>
                <!--#endregion -->

                <!--#region SAMPLE 2-->
                <TextBlock Grid.Column="1" Grid.Row="0" TextWrapping="Wrap" VerticalAlignment="Top" Margin="8 0 8 0">SAMPLE 2: Top level dialog,  using OpenDialog, passing content via the Parameter. You can pass a view model, provided a corresponding DataTemplate can be found in the scope of the root DialogHost.</TextBlock>
                <StackPanel Grid.Column="1" Grid.Row="1" >
                    <StackPanel VerticalAlignment="Center">
                        <!--the request to open the dialog will bubble up to the top-most DialogHost, but we can used the attached property based event to handle the response -->
                        <Button Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
                                materialDesign:DialogHost.DialogClosingAttached="Sample2_DialogHost_OnDialogClosing"
                                Width="128">
                            <Button.CommandParameter>
                                <StackPanel Margin="16">
                                    <ProgressBar Style="{DynamicResource MaterialDesignCircularProgressBar}" HorizontalAlignment="Center" Margin="16" IsIndeterminate="True" Value="0" />
                                    <Button Style="{StaticResource MaterialDesignFlatButton}" IsCancel="True" 
                                            Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                                            CommandParameter="Sample2Cancel"
                                            HorizontalAlignment="Center">CANCEL</Button>
                                </StackPanel>
                            </Button.CommandParameter>
                            PASS VIEW
                        </Button>
                        <Button Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
                                Width="128" Margin="0 32 0 0">
                            <Button.CommandParameter>
                                <!-- the simplest view model of all, a DateTime. the view can be found in the resources of MainWindow.xaml  -->
                                <system:DateTime>1966-JUL-30</system:DateTime>
                            </Button.CommandParameter>
                            PASS MODEL
                        </Button>
                    </StackPanel>
                </StackPanel>
                <!--#endregion-->                
            </Grid>
        </ScrollViewer>
    </Grid>
</UserControl>
